@using System.ServiceModel.Configuration
@using IndDev.Domain.Entity
@model IndDev.Domain.ViewModels.ProductDetailsViewModel

@{
    Layout = "~/Views/Shared/_NewDesing.cshtml";
}
@section links
{
    <link href="~/Content/admin.css" rel="stylesheet" />
<link href="~/Content/bootstrap-fileupload.min.css" rel="stylesheet" />
}
<div class="productForm">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                @if (Model.Avatar != null)
                {
                    using (Html.BeginForm("AddAvatar", "Admin", FormMethod.Post, new {enctype = "multipart/form-data"}))
                     {
                         @Html.AntiForgeryToken()
                         @Html.Hidden("id", Model.Product.Id)
                         <div class="formControl">
                             <p>Аватар продукта</p>
                             <div class="fileupload fileupload-new" data-provides="fileupload">
                                 <div class="fileupload-new thumbnail" style="width: 100%; overflow: hidden;">
                                     <img src="@Model.Avatar.Path" alt=""/>
                                 </div>
                                 <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 100%; line-height: 20px; background-color: #999"></div>
                                 <div>
                                     <span class="btn btn-file btn-primary"><span class="fileupload-new">Выбрать</span><span class="fileupload-exists">Заменить</span><input type="file" name="photo"></span><input type="submit" class="btn btn-file btn-primary fileupload-exists" value="Сохранить"/>
                                     <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Отменить</a>
                                 </div>
                             </div>
                         </div>
                     }
                }
                else
                {
                    using (Html.BeginForm("AddAvatar", "Admin", FormMethod.Post, new {enctype = "multipart/form-data"}))
                     {
                         @Html.AntiForgeryToken()
                         @Html.Hidden("id", Model.Product.Id)
                         <div class="formControl">
                             <p>Аватар продукта</p>
                             <div class="fileupload fileupload-new" data-provides="fileupload">
                                 <div class="fileupload-new thumbnail" style="width: 100%; overflow: hidden; background-color: #999">
                                     <img src="~/Content/images/noimage.png" alt=""/>
                                 </div>
                                 <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 100%; line-height: 20px; background-color: #999"></div>
                                 <div>
                                     <span class="btn btn-file btn-primary"><span class="fileupload-new">Выбрать</span><span class="fileupload-exists">Заменить</span><input type="file" name="photo"></span><input type="submit" class="btn btn-file btn-primary fileupload-exists" value="Сохранить"/>
                                     <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Отменить</a>
                                 </div>
                             </div>
                         </div>
                     }
                }
                <div class="aditionalImages">
                    @foreach (var item in Model.Product.ProductPhotos.Where(photo => photo.PhotoType != PhotoType.Avatar))
                    {
                        <div class="thumbnail">
                            <img src="@item.Path" alt="@item.AltText"/>
                            <div class="caption">
                                @Html.ActionLink("Удалить","RemoveImage","Admin",new {id=item.Id},null)
                            </div>
                        </div>
                    }
                    @using (Html.BeginForm("AddPhoto","Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Model.Product.Id)
                        <div class="formControl">
                            <p>Фото продукта</p>
                            <div class="fileupload fileupload-new" data-provides="fileupload">
                                <div class="fileupload-new thumbnail" style="width: 100%; overflow: hidden; background-color: #999">
                                    <img src="~/Content/images/noimage.png" alt="" />
                                </div>
                                <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 100%; line-height: 20px; background-color: #999"></div>
                                <div>
                                    <span class="btn btn-file btn-primary"><span class="fileupload-new">Выбрать</span><span class="fileupload-exists">Заменить</span><input type="file" name="photo"></span><input type="submit" class="btn btn-file btn-primary fileupload-exists" value="Сохранить" />
                                    <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Отменить</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-9">
                @using (Html.BeginForm("UpdateProduct", "Admin", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Product.Id)
                    <p>Редактировать: @Model.Product.Title</p>
                    @Html.Label("Артикул:")
                    @Html.TextBoxFor(model => model.Product.Articul)<br/>
                    @Html.Label("Наименование:")
                    @Html.TextBoxFor(model => model.Product.Title)<br/>
                    @Html.Label("Описание:")<br/>
                    @Html.TextAreaFor(model => model.Product.Description, new {@class="editorTiny"})<br/>
                    @Html.Label("Предупреждение:")<br />
                    @Html.TextAreaFor(model => model.Product.Warning, new { @class = "editorTiny" })<br />
                    @Html.Label("Товар является услугой:")
                    @Html.CheckBoxFor(model => model.Product.IsService)<br/>
                    @Html.Label("Товар выставить на распродажу:")
                    @Html.CheckBoxFor(model => model.Product.Reclama)
                    <div class="blockChar">
                        @Html.Label("Брэнд:")
                        @Html.DropDownListFor(model => model.SelBr, Model.Brands, Model.SelBr)
                        @Html.Label("Гарантия:")
                        @Html.TextBoxFor(model => model.Product.Warranty)
                        <br/>
                        @Html.Label("Вендор:")
                        @Html.DropDownListFor(model => model.SelVr, Model.Vendors, Model.SelVr)<br/>
                        @Html.Label("Еденица измерения:")
                        @Html.DropDownListFor(model => model.SelMu, Model.MesureUnits, Model.SelMu)<br/>
                        @Html.Label("Склад отгрузки:")
                        @Html.DropDownListFor(model => model.SelStock, Model.Stocks, Model.SelStock)<br />

                    </div>
                    <div class="blockPrice">
                        <ul>
                            @for (var i = 0; i < Model.Prices.Count; i++)
                            {
                                var price = Model.Prices[i];
                                @Html.HiddenFor(model => model.Prices[i].Id)
                                <li>
                                    @Html.Label(Model.Prices[i].PriceType.ToString())
                                    @Html.EditorFor(model => model.Prices[i].Title)
                                    @Html.DropDownListFor(model => model.Prices[i].SelCurr, Model.Prices[i].Currencies, price.Currency.StringCode)
                                    @Html.EditorFor(model => model.Prices[i].Value)
                                    @Html.Label(Model.Prices[i].Valuta)

                                </li>
                            }
                        </ul>
                    </div>
                    @Html.ActionLink("Назад", "SubCatDetails", new { id = Model.Product.Categoy.Id }, new { @class = "btn btn-info btn-sm" })
                    <input type="submit" value="Сохранить" class="btn btn-success btn-sm"/>
                }
            </div>
        </div>
    </div>
</div>
@section scripts
{
<script src="~/Scripts/bootstrap-fileupload.js"></script>
}
@*<div class="well-lg">
    <h2>@Model.Product.Title</h2>
    <div class="formProduct">
        <div class="row">
            @using (Html.BeginForm("UpdateProduct", "Admin", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Product.Id)
                <div class="col-md-3 pull-left">
                    @if (Model.Avatar != null)
                    {
                        <img src="@Model.Avatar.Path" alt="avatarka" width="200"/>
                    }
                    else
                    {
                        <img src="~/Content/images/noimage.png" alt="Нет картинки" width="100"/>
                    }
                </div>
                <div class="col-md-9">
                    @Html.LabelFor(model => model.Product.Articul, "Артикул:")<br/>
                    @Html.EditorFor(model => model.Product.Articul)<br/>

                    @Html.LabelFor(model => model.Product.Title, "Наименование:")<br/>
                    @Html.EditorFor(model => model.Product.Title)<br/>

                    @Html.LabelFor(model => model.Product.Description, "Описание:")<br/>
                    @Html.TextAreaFor(model => model.Product.Description)<br/>

                    @Html.LabelFor(model => model.Product.IsService, "Товар является услугой:")
                    @Html.CheckBoxFor(model => model.Product.IsService)<br/>
                    @Html.LabelFor(model=>model.Product.Reclama, "Рекламируем?")
                    @Html.CheckBoxFor(model => model.Product.Reclama)
                </div>
                <input type="submit" value="Сохранить"/>
            }
        </div>

        <hr/>

        <h2>Дополнительные фото товара:</h2>

        <div class="row">
            @if (Model.Product.ProductPhotos != null && Model.Product.ProductPhotos.Count > 0)
            {
                foreach (var item in Model.Product.ProductPhotos)
                {
                    <div class="col-md-2">
                        <img src="@item.Path" alt="@item.AltText" width="100"/>
                        @Html.ActionLink("Удалить", "Products", new {id = item.Id})
                    </div>
                }
            }
            <div class="col-md-2">
                @using (Html.BeginForm("AddPhotoToProduct", "Admin", FormMethod.Post, new {enctype = "multipart/form-data"}))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ProductId", Model.Product.Id)
                    <input type="file" name="photo"/>
                    <input type="submit" value="Добавить"/>
                }
            </div>

        </div>

        <hr/>

        <h2>Характеристики:</h2><br/>
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Product.Id)
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Brands, "Брэнд")
                    @Html.DropDownListFor(model => model.SelBr, new SelectList(Model.Brands, "Id", "FullName"), Model.Product.Brand.FullName)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Vendors, "Вендор")
                    @Html.DropDownListFor(model => model.SelVr, new SelectList(Model.Vendors, "Id", "Name"), Model.Product.Vendor.Name)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.MesureUnits, "Ед. измерения")
                    @Html.DropDownListFor(model => model.SelMu, new SelectList(Model.MesureUnits, "Id", "FullName"), Model.Product.MesureUnit.FullName)
                </div>
                <input type="submit" value="Сохранить"/>
            }
        </div>
        <hr/>

        <h2>Цены:</h2>
        <div class="row" id="priceSection">
            @Html.Action("SetPriceSection", new {pId = Model.Product.Id})
        </div>
        <hr/>
    </div>
    @Html.ActionLink("Back","SubCatDetails",new {id=Model.Product.Categoy.Id})
</div>*@